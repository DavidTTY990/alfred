{"version":3,"file":"js/968.66f9d444.js","mappings":"+PACOA,MAAM,sB,UACTC,EAAAA,EAAAA,GAAoD,MAAhDD,MAAM,8BAA6B,YAAQ,K,GAC1CA,MAAM,kB,GACJA,MAAM,U,UACTC,EAAAA,EAAAA,GAAc,UAAV,SAAK,K,GAGND,MAAM,U,UACTC,EAAAA,EAAAA,GAAc,UAAV,SAAK,K,GAGND,MAAM,U,UACTC,EAAAA,EAAAA,GAAc,UAAV,SAAK,K,UAGXA,EAAAA,EAAAA,GAGM,OAHDD,MAAM,UAAQ,EACjBC,EAAAA,EAAAA,GAAc,UAAV,UACJA,EAAAA,EAAAA,GAAa,SAAV,YAAM,K,UAEXA,EAAAA,EAAAA,GAGM,OAHDD,MAAM,UAAQ,EACjBC,EAAAA,EAAAA,GAAY,UAAR,QACJA,EAAAA,EAAAA,GAAU,SAAP,SAAG,K,UAERA,EAAAA,EAAAA,GAGM,OAHDD,MAAM,UAAQ,EACjBC,EAAAA,EAAAA,GAAY,UAAR,QACJA,EAAAA,EAAAA,GAAU,SAAP,SAAG,K,0CAzBZC,EAAAA,EAAAA,IA4BM,MA5BNC,EA4BM,CA3BJC,GACAH,EAAAA,EAAAA,GAyBM,MAzBNI,EAyBM,EAxBJJ,EAAAA,EAAAA,GAGM,MAHNK,EAGM,CAFJC,GACAN,EAAAA,EAAAA,GAAyC,UAAAO,EAAAA,EAAAA,IAAnCC,EAAAC,UAAUC,oBAAkB,MAEpCV,EAAAA,EAAAA,GAGM,MAHNW,EAGM,CAFJC,GACAZ,EAAAA,EAAAA,GAAuC,UAAAO,EAAAA,EAAAA,IAAjCC,EAAAC,UAAUI,kBAAgB,MAElCb,EAAAA,EAAAA,GAGM,MAHNc,EAGM,CAFJC,GACAf,EAAAA,EAAAA,GAAyC,UAAAO,EAAAA,EAAAA,IAAnCC,EAAAC,UAAUO,mBAAoB,IAAC,KAEvCC,EAIAC,EAIAC,K,CASN,OACEC,OACE,MAAO,CACLX,UAAW,CACTC,mBAAoB,GACpBG,iBAAkB,GAClBG,kBAAmB,GACnBK,cAAe,IAEjBC,OAAQ,0BACRC,SAAU,GAEd,EACAC,QAAS,CACPC,WACE,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,KAAKC,MACFC,IAAK,GAAEF,KAAKP,gBACZU,MAAMC,IACLC,QAAQC,IAAIF,EAAIb,KAAKgB,OACrBP,KAAKN,SAAWU,EAAIb,KAAKgB,MACzBP,KAAKQ,wBACLR,KAAKS,qBACLT,KAAKU,wBACLZ,EAAQM,EAAI,IAEbO,OAAOC,IACNP,QAAQC,IAAIM,EAAMC,UAClBd,EAAOa,EAAMC,SAAS,GACtB,GAER,EACAL,wBACE,IAAIM,EAAkBd,KAAKN,SAASqB,QAAOC,GAA6B,MAArBA,EAAKC,eACxDjB,KAAKpB,UAAUC,mBAAqBiC,EAAgBI,MACtD,EACAT,qBACE,IAAIU,EAAgBnB,KAAKN,SAASqB,QAAOC,GAA6B,MAArBA,EAAKC,eACtDjB,KAAKpB,UAAUI,iBAAmBmC,EAAcD,MAClD,EACAR,wBACE,IAAIU,EAAwBpB,KAAKpB,UAAUI,iBAAmBgB,KAAKN,SAASwB,OAAU,IACtFlB,KAAKpB,UAAUO,kBAAoBkC,KAAKC,MAAMF,EAChD,GAEFG,UACElB,QAAQC,IAAI,6BACZN,KAAKJ,UACP,G,QC1EF,MAAM4B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://project-alfred/./src/views/OverViewPage.vue","webpack://project-alfred/./src/views/OverViewPage.vue?83e3"],"sourcesContent":["<template>\n  <div class=\"overview-container\">\n    <h3 class=\"overview-title text-center\">Overview</h3>\n    <div class=\"card-container\">\n      <div class=\"card-1\">\n        <h3>未完成項目</h3>\n        <p>{{ dashboard.unfinishedTasksNum }}</p>\n      </div>\n      <div class=\"card-2\">\n        <h3>已完成項目</h3>\n        <p>{{ dashboard.finishedTasksNum }}</p>\n      </div>\n      <div class=\"card-3\">\n        <h3>項目完成率</h3>\n        <p>{{ dashboard.tasksFinishedRate }}%</p>\n      </div>\n      <div class=\"card-4\">\n        <h3>下一項待辦</h3>\n        <p>幫貓貓買凍乾</p>\n      </div>\n      <div class=\"card-5\">\n        <h3>圖表一</h3>\n        <p>圓餅圖</p>\n      </div>\n      <div class=\"card-6\">\n        <h3>圖表二</h3>\n        <p>長條圖</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dashboard: {\n        unfinishedTasksNum: \"\",\n        finishedTasksNum: \"\",\n        tasksFinishedRate: \"\",\n        nextToDoTasks: \"\",\n      },\n      apiUrl: \"https://todoo.5xcamp.us\",\n      taskData: [],\n    };\n  },\n  methods: {\n    getToDos() {\n      return new Promise((resolve, reject) => {\n        this.$http\n          .get(`${this.apiUrl}/todos`)\n          .then((res) => {\n            console.log(res.data.todos);\n            this.taskData = res.data.todos;\n            this.countUnfinishiedTasks();\n            this.countFinishedTasks();\n            this.countTaskFinishedRate();\n            resolve(res);\n          })\n          .catch((error) => {\n            console.log(error.response);\n            reject(error.response);\n          });\n      });\n    },\n    countUnfinishiedTasks() {\n      let unfinishedTasks = this.taskData.filter(item => item.completed_at == null )\n      this.dashboard.unfinishedTasksNum = unfinishedTasks.length;\n    },\n    countFinishedTasks() {\n      let finishedTasks = this.taskData.filter(item => item.completed_at != null)\n      this.dashboard.finishedTasksNum = finishedTasks.length;\n    },\n    countTaskFinishedRate() {\n      let tasksFinishedRateNum = (this.dashboard.finishedTasksNum / this.taskData.length) * 100;\n      this.dashboard.tasksFinishedRate = Math.round(tasksFinishedRateNum);\n    }\n  },\n  created() {\n    console.log(\"overview page is created!\")\n    this.getToDos();\n  }\n};\n</script>\n\n<style scoped>\n.overview-title {\n  font-weight: bold;\n  font-size: 40px;\n  letter-spacing: 0.1rem;\n}\n.card-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.card-1,\n.card-2,\n.card-3,\n.card-4,\n.card-5,\n.card-6 {\n  width: 29%;\n  height: 29vh;\n  color: white;\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  margin: 2%;\n  border-radius: 10% 10% 10% 50%;\n  /* font-size: 50px; */\n}\n\n.card-1,\n.card-2,\n.card-3,\n.card-4,\n.card-5,\n.card-6 p {\n  font-size: 30px;\n}\n\n.card-1 {\n  background-color: #fe5838;\n}\n\n.card-2 {\n  background-color: #ff776a;\n}\n\n.card-3 {\n  background-color: #a35efb;\n}\n\n.card-4 {\n  background-color: #19bafd;\n}\n\n.card-5 {\n  background-color: #19d086;\n}\n\n.card-6 {\n  background-color: #323232;\n}\n</style>\n","import { render } from \"./OverViewPage.vue?vue&type=template&id=48c820da&scoped=true\"\nimport script from \"./OverViewPage.vue?vue&type=script&lang=js\"\nexport * from \"./OverViewPage.vue?vue&type=script&lang=js\"\n\nimport \"./OverViewPage.vue?vue&type=style&index=0&id=48c820da&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/davidtty/Desktop/Hexschool/Project/project-alfred/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-48c820da\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$data","dashboard","unfinishedTasksNum","_hoisted_6","_hoisted_7","finishedTasksNum","_hoisted_8","_hoisted_9","tasksFinishedRate","_hoisted_10","_hoisted_11","_hoisted_12","data","nextToDoTasks","apiUrl","taskData","methods","getToDos","Promise","resolve","reject","this","$http","get","then","res","console","log","todos","countUnfinishiedTasks","countFinishedTasks","countTaskFinishedRate","catch","error","response","unfinishedTasks","filter","item","completed_at","length","finishedTasks","tasksFinishedRateNum","Math","round","created","__exports__","render"],"sourceRoot":""}